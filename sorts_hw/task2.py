"""
2. Отсортируйте по возрастанию методом слияния одномерный вещественный массив, заданный случайными числами
на промежутке [0; 50). Выведите на экран исходный и отсортированный массивы.
"""
from random import shuffle


def merge(arr):
    """
    1. рекурсивно разбить массив на подмассивы размером в один-два элемента
    2. мелкие массивы отсортировать, на выходе получить массивы по три-четыре элемента, отсортированные.
    3. из отсортированных мелких массивов собрать один отсортированный большой, сравнивая между собой элементы
    каждых двух массивов по очереди: первый с первым, потом меньший первый - со вторым, потом меньший из этой
    пары - со следующим, и т.д. Хвостик пережившего сортировку массива приделать к результату.
    :param arr:
    :return:
    """
    cnt = len(arr)
    if cnt > 2:
        arr = merge(arr[:cnt // 2]) + merge(arr[cnt // 2:])
        last = len(arr) - 1
        for i in range(0, last):
            min_v = arr[i]
            min_k = i
            for j in range(i + 1, last + 1):
                if min_v > arr[j]:
                    min_v = arr[j]
                    min_k = j
            if min_k != i:
                arr[i], arr[min_k] = arr[min_k], arr[i]
            # print(arr)   # раскомментировать, если интересно, как работает

    elif len(arr) > 1 and arr[0] > arr[1]:
        arr[0], arr[1] = arr[1], arr[0]

    return arr

spread = 50
ar = [i for i in range(0, spread)]
shuffle(ar)
print(ar)
print(merge(ar))
